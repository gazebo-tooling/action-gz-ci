name: 'Gazebo installation for Github Actions CI'
description: ''
author: "Louise Poubel"
inputs:
  github_token:
    description: "Token for the repo. Can be passed in using {{ secrets.GITHUB_TOKEN }}"
    required: true
  apt-dependencies:
    description: 'Dependencies to apt install'
    required: false
    default: ''
  codecov-enabled:
    description: 'Prepare the build for coverage and execute codecov'
    required: false
    default: ''
  codecov-token-private-repos:
    description: 'Token to upload to codecov in private repositories. Public repos do not need it'
    required: false
    default: ''
  codecov-token:
    description: 'DEPRECATED: use codecov-token-private if using private repositories'
    required: false
    default: ''
    deprecationMessage: 'Public repositories do not need codecov-token, use codecov-enabled to run codecov on Public repositories. To facilitate transition codecov is enabled but not using any token'
  cmake-args:
    description: 'Additional CMake arguments to use when building package under test'
    required: false
    default: ''
  doxygen-enabled:
    description: 'Run doxygen documentation checks.'
    required: false
    default: ''
  tests-enabled:
    description: 'Run tests.'
    required: false
    default: 'true'
  cpplint-enabled:
    description: 'Run cpplint'
    required: false
    default: 'false'
  cppcheck-enabled:
    description: 'Run cppcheck'
    required: false
    default: 'false'
runs:
  using: 'composite'
  steps:
    - name: Compile and test
      id: ci
      uses: gazebo-tooling/action-gz-ci@jammy
      with:
        github_token: ${{ inputs.github_token }}
        apt-dependencies: ${{ inputs.apt-dependencies }}
        codecov-enabled: ${{ inputs.codecov-enabled }}
        codecov-token-private-repos: ${{ inputs.codecov-token-private-repos }}
        cmake-args: ${{ inputs.cmake-args }}
        doxygen-enabled: ${{ inputs.doxygen-enabled }}
        tests-enabled: ${{ inputs.tests-enabled }}
        cpplint-enabled: ${{ inputs.cpplint-enabled }}
        cppcheck-enabled: ${{ inputs.cppcheck-enabled }}
    - name: Strip workspace prefix
      shell: bash
      if: success() || failure() # always run even if the previous step fails
      run: |
        mkdir test_results/
        cp ./build/test_results/*.xml ./test_results/
        sed -i 's+/github/workspace/++g' ./test_results/*.xml
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: success() || failure() # always run even if the previous step fails
      with:
        check_name: 'Ubuntu Jammy Results'
        report_paths: 'build/test_results/*.xml'
